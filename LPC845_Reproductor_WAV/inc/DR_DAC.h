/*******************************************************************************************************************************//**
 *
 * @file		DR_DAC.h
 * @brief		Breve descripción del objetivo del Módulo
 * @date		Jan 8, 2022
 * @author		Federico Speroni
 *
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** MODULO
 **********************************************************************************************************************************/

#ifndef DR_DAC_H_
#define DR_DAC_H_

/***********************************************************************************************************************************
 *** INCLUDES GLOBALES
 **********************************************************************************************************************************/
#include <stdint.h>
#include "DR_Tipos.h"

/***********************************************************************************************************************************
 *** DEFINES GLOBALES
 **********************************************************************************************************************************/
#define	DAC0_BASE	0x40014000
#define	DAC1_BASE	0x40018000

/***********************************************************************************************************************************
 *** MACROS GLOBALES
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** TIPO DE DATOS GLOBALES - Enumeraciones
 **********************************************************************************************************************************/
typedef enum
{
	DAC_SEL_0 = 0,
	DAC_SEL_1
}DAC_sel_en;

typedef enum
{
	DAC_SETTLING_TIME_SEL_1US_MAX = 0,
	DAC_SETTLING_TIME_SEL_2_5US_MAX
}DAC_settling_time_en;

/***********************************************************************************************************************************
 *** TIPO DE DATOS GLOBALES - Estructuras
 **********************************************************************************************************************************/
typedef struct
{
	uint32_t : 6;
	uint32_t VALUE : 10;
	uint32_t BIAS : 1;
	uint32_t : 16;
}DAC_CR_reg_t;

typedef struct
{
	uint32_t INT_DMA_REQ : 1;
	uint32_t DBLBUF_ENA : 1;
	uint32_t CNT_ENA : 1;
	uint32_t DMA_ENA : 1;
	uint32_t : 28;
}DAC_CTRL_reg_t;

typedef struct
{
	uint32_t VALUE : 16;
	uint32_t : 16;
}DAC_CNTVAL_reg_t;

typedef struct
{
	__RW DAC_CR_reg_t CR;
	__RW DAC_CTRL_reg_t CTRL;
	__RW DAC_CNTVAL_reg_t CNTVAL;
}DAC_per_t;


/***********************************************************************************************************************************
 *** VARIABLES GLOBALES
 **********************************************************************************************************************************/
// extern tipo nombreVariable;

/***********************************************************************************************************************************
 *** PROTOTIPOS DE FUNCIONES GLOBALES
 **********************************************************************************************************************************/
void DAC_write(DAC_sel_en dac, uint16_t new_value);
void DAC_config_settling_time(DAC_sel_en dac, DAC_settling_time_en settling_time);
void DAC_enable_DMA_request(DAC_sel_en dac);
void DAC_disable_DMA_request(DAC_sel_en dac);
void DAC_enable_double_buffer(DAC_sel_en dac);
void DAC_disable_double_buffer(DAC_sel_en dac);
void DAC_enable_timer(DAC_sel_en dac);
void DAC_disable_timer(DAC_sel_en dac);
void DAC_enable_DMA(DAC_sel_en dac);
void DAC_disable_DMA(DAC_sel_en dac);
void DAC_write_reaload_value(DAC_sel_en dac, uint16_t value);

#endif /* DR_DAC_H_ */

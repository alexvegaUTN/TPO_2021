/*******************************************************************************************************************************//**
 *
 * @file		PR_Timer.h
 * @brief		Breve descripción del objetivo del Módulo
 * @date		Oct 8, 2021
 * @author		Federico Speroni
 *
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** MODULO
 **********************************************************************************************************************************/

#ifndef PR_TIMER_H_
#define PR_TIMER_H_

/***********************************************************************************************************************************
 *** INCLUDES GLOBALES
 **********************************************************************************************************************************/
#include "DR_Tipos.h"
#include "DR_Timer.h"

/***********************************************************************************************************************************
 *** DEFINES GLOBALES
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** MACROS GLOBALES
 **********************************************************************************************************************************/
#define	MILISEGUNDOS 		(1)							// SYSTICK cada 1ms
#define SEGUNDOS			(1000 * MILISEGUNDOS)
#define MINUTOS				(60 * SEGUNDOS)

/***********************************************************************************************************************************
 *** TIPO DE DATOS GLOBALES
 **********************************************************************************************************************************/
typedef enum {
	TIMER_LED_ID,
	TIMER_SD_INIT_ID,
	TIMER_SD_CMD41_ID
}timer_id_e;

typedef enum {
	MSEG = 0,
	SEG,
	MIN
}base_tiempo_e;

typedef enum
{
	kTIMER_STOP = 0,
	kTIMER_RUN
}timer_activity_e;

/***********************************************************************************************************************************
 *** VARIABLES GLOBALES
 **********************************************************************************************************************************/
// extern tipo nombreVariable;
extern uint8_t tiempo_1;
extern uint8_t tiempo_2;

/***********************************************************************************************************************************
 *** PROTOTIPOS DE FUNCIONES GLOBALES
 **********************************************************************************************************************************/
//typedef void (*timer_callback)(uint32_t);
void Timer_Event(void);

int8_t Timer_Start(uint8_t id, uint32_t tiempo, uint8_t base , timer_handler callback);
int8_t Timer_Set(uint8_t id, uint32_t tiempo);
uint32_t Timer_Get(uint8_t id);
void Timer_Standby(uint8_t id, uint8_t accion);
timer_activity_e Timer_Activity_Get(uint8_t id);
void Timer_Stop(uint8_t id);
void Timer_Close(void);

void timer_led_handler(uint32_t value);

#endif /* PR_TIMER_H_ */
